============================
Tests for ``100-matrix_mul``
============================

Importing ``matrix_mul``
========================

>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

Matrices
========

Integers Matrices
-----------------

>>> mat_a = [[1, 2]]
>>> mat_b = [[3, 4], [5, 6]]
>>> matrix_mul(mat_a, mat_b)
[[13, 16]]

>>> mat_a = [[0, 0, 0], [0, 0, 0]]
>>> mat_b = [[3, 4], [5, 6], [7, 8]]
>>> matrix_mul(mat_a, mat_b)
[[0, 0], [0, 0]]

>>> matrix_mul([[4]], [[4]])
[[16]]

Floats Matrices
---------------

>>> mat_a = [[2.4242, 3.31313131, 4.444444444], [5.6, 6.6, 7.7], [8.99999999999998, 9.00000000000000009, 10.10100]]
>>> mat_b = [[81.99, 9.1, 10.0], [2.23431, 3.3333, 4.2222], [5.5, 6.0, 7.1111]]
>>> matrix_mul(mat_a, mat_b)
[[230.60716485924607, 59.770547259623, 69.8355919028104], [516.2404459999999, 119.15978, 138.62198999999998], [813.5742899999984, 172.50569999999982, 199.8290210999998]]

>>> mat_a = [[2.4242, 3.31313131, 4.444444444], [float("nan"), 9.00000000000000009, 10.10100], [5.6, 6.6, 7.7]]
>>> mat_b = [[float("infinity"), 9.1, 10.0], [2.23431, 3.3333, 4.2222], [5.5, 6.0, 7.1111]]
>>> matrix_mul(mat_a, mat_b)
[[inf, 59.770547259623, 69.8355919028104], [nan, nan, nan], [inf, 119.15978, 138.62198999999998]]

Mixed Matrices
--------------

>>> mat_a = [[2.21, 3], [4, 5], [6, 7.5]]
>>> mat_b = [[8, 9, 10, 11, 12, 13.44], [2, 3, 4, 5.0, 6, 7]]
>>> matrix_mul(mat_a, mat_b)
[[23.68, 28.89, 34.1, 39.31, 44.519999999999996, 50.7024], [42, 51, 60, 69.0, 78, 88.75999999999999], [63.0, 76.5, 90.0, 103.5, 117.0, 133.14]]

>>> mat_a = [[81.99, 9.1, 10.0], [2.23431, 3.3333, 4.2222], [5.5, 6.0, 7.1111]]
>>> mat_b = [[2, 3, 4, 5], [6, 7, 8, 9], [10, 11, 12, 13]]
>>> matrix_mul(mat_a, mat_b)
[[318.58, 419.66999999999996, 520.76, 621.8499999999999], [66.69042, 76.48023, 86.27004, 96.05985], [118.111, 136.7221, 155.3332, 173.9443]]

>>> mat_a = [[2, 3], [4, 5], [6, 7], [8, 9], [10, 11], [12, 13]]
>>> mat_b = [[81.99, 9.1, 10.0], [2.23431, 3.3333, 4.2222]]
>>> matrix_mul(mat_a, mat_b)
[[170.68293, 28.1999, 32.6666], [339.13155, 53.0665, 61.111000000000004], [507.58016999999995, 77.9331, 89.55539999999999], [676.02879, 102.7997, 117.9998], [844.47741, 127.6663, 146.4442], [1012.9260299999999, 152.53289999999998, 174.8886]]

More rows than cols
-------------------

>>> mat_a = [[2, 3, 4], [5, 6, 7], [8, 9, 10], [11, 12, 13], [14, 15, 16], [17, 18, 19]]
>>> mat_b = [[2, 3, 4, 5], [6, 7, 8, 9], [10, 11, 12, 13]]
>>> matrix_mul(mat_a, mat_b)
[[62, 71, 80, 89], [116, 134, 152, 170], [170, 197, 224, 251], [224, 260, 296, 332], [278, 323, 368, 413], [332, 386, 440, 494]]

More cols than rows
-------------------

>>> mat_a = [[2, 3, 4, 5, 6, 7], [8, 9, 10, 11, 12, 13]]
>>> mat_b = [[2, 3, 4, 5], [6, 7, 8, 9], [10, 11, 12, 13], [14, 15, 16, 17], [18, 19, 20, 21], [22, 23, 24, 25]]
>>> matrix_mul(mat_a, mat_b)
[[394, 421, 448, 475], [826, 889, 952, 1015]]

One row and one column
----------------------

>>> mat_a = [[2, 3, 4]]
>>> mat_b = [[2], [3], [4]]
>>> matrix_mul(mat_a, mat_b)
[[29]]

>>> mat_a = [[2], [3], [4]]
>>> mat_b = [[2, 3, 4]]
>>> matrix_mul(mat_a, mat_b)
[[4, 6, 8], [6, 9, 12], [8, 12, 16]]

Identity Matrice
----------------

>>> mat_a = [[1, 0, 0], [0, 1, 0], [0, 0, 1]]
>>> mat_b = [[8, 9, 10], [2, 3, 4], [5, 6.0, 7]]
>>> matrix_mul(mat_a, mat_b)
[[8, 9.0, 10], [2, 3.0, 4], [5, 6.0, 7]]

>>> mat_a = [[8, 9, 10], [2, 3, 4], [5, 6.0, 7]]
>>> mat_b = [[1, 0, 0], [0, 1, 0], [0, 0, 1]]
>>> matrix_mul(mat_a, mat_b)
[[8, 9, 10], [2, 3, 4], [5.0, 6.0, 7.0]]

Exceptions
==========

TypeError: matrix must be a list
--------------------------------

>>> matrix_mul(None, [[]])
Traceback (most recent call last):
    ...Traceback...
TypeError: m_a must be a list

>>> matrix_mul([[1]], None)
Traceback (most recent call last):
    ...Traceback...
TypeError: m_b must be a list

TypeError: matrix must be a list of lists
-----------------------------------------

>>> matrix_mul([None], [[]])
Traceback (most recent call last):
    ...Traceback...
TypeError: m_a must be a list of lists

>>> matrix_mul([[1]], [None])
Traceback (most recent call last):
    ...Traceback...
TypeError: m_b must be a list of lists

ValueError: matrix can't be empty
---------------------------------

>>> matrix_mul([[]], [[]])
Traceback (most recent call last):
    ...Traceback...
ValueError: m_a can't be empty

>>> matrix_mul([[1]], [[]])
Traceback (most recent call last):
    ...Traceback...
ValueError: m_b can't be empty

TypeError: matrix should contain only integers or floats
--------------------------------------------------------

>>> mat_a = [["2", 3], [4, 5]]
>>> mat_b = [[8, 9, 10], [2, 3, 4]]
>>> matrix_mul(mat_a, mat_b)
Traceback (most recent call last):
    ...Traceback...
TypeError: m_a should contain only integers or floats

>>> mat_a = [[2, 3], [4, "5"]]
>>> mat_b = [[8, 9, 10], [2, 3, 4]]
>>> matrix_mul(mat_a, mat_b)
Traceback (most recent call last):
    ...Traceback...
TypeError: m_a should contain only integers or floats

>>> mat_a = [[2, 3], [4, 5]]
>>> mat_b = [["8", 9, 10], [2, 3, 4]]
>>> matrix_mul(mat_a, mat_b)
Traceback (most recent call last):
    ...Traceback...
TypeError: m_b should contain only integers or floats

>>> mat_a = [[2, 3], [4, 5]]
>>> mat_b = [[8, 9, 10], [2, 3, "4"]]
>>> matrix_mul(mat_a, mat_b)
Traceback (most recent call last):
    ...Traceback...
TypeError: m_b should contain only integers or floats

TypeError: each row of the matrix must be of the same size
----------------------------------------------------------

>>> mat_a = [[2, 3], [4, 5], [6]]
>>> mat_b = [[8, 9, 10], [2, 3, 4]]
>>> matrix_mul(mat_a, mat_b)
Traceback (most recent call last):
    ...Traceback...
TypeError: each row of m_a must be of the same size

>>> mat_a = [[2, 3], [4, 5]]
>>> mat_b = [[8, 9, 10], [2, 3]]
>>> matrix_mul(mat_a, mat_b)
Traceback (most recent call last):
    ...Traceback...
TypeError: each row of m_b must be of the same size

ValueError: matrices can't be multiplied
----------------------------------------

>>> mat_a = [[2, 3], [4, 5]]
>>> mat_b = [[5, 6, 7], [8, 9, 10], [2, 3, 4]]
>>> matrix_mul(mat_a, mat_b)
Traceback (most recent call last):
    ...Traceback...
ValueError: m_a and m_b can't be multiplied

>>> mat_a = [[5, 6, 7], [8, 9, 10], [2, 3, 4]]
>>> mat_b = [[2, 3], [4, 5], [5, 6], [7, 8]]
>>> matrix_mul(mat_a, mat_b)
Traceback (most recent call last):
    ...Traceback...
ValueError: m_a and m_b can't be multiplied

TypeError: Missing arguments
----------------------------

>>> matrix_mul()
Traceback (most recent call last):
    ...Traceback...
TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

>>> matrix_mul(mat_b)
Traceback (most recent call last):
    ...Traceback...
TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

Mix of Exceptions
-----------------

>>> mat_a = [5, 6, 7]
>>> mat_b = [[]]
>>> matrix_mul(None, mat_b)
Traceback (most recent call last):
    ...Traceback...
TypeError: m_a must be a list

>>> matrix_mul(mat_a, mat_b)
Traceback (most recent call last):
    ...Traceback...
TypeError: m_a must be a list of lists

>>> mat_a = [["5", 7], ["8, 9, 10"], [2, 3, 4]]
>>> matrix_mul(mat_a, mat_b)
Traceback (most recent call last):
    ...Traceback...
ValueError: m_b can't be empty

>>> mat_b = [[2, 3], [4, 5], [5, 6]]
>>> matrix_mul(mat_a, mat_b)
Traceback (most recent call last):
    ...Traceback...
TypeError: m_a should contain only integers or floats

>>> mat_a = [[5, 6, 7], [8, 9], [2, 3, 4]]
>>> matrix_mul(mat_a, mat_b)
Traceback (most recent call last):
    ...Traceback...
TypeError: each row of m_a must be of the same size

>>> mat_a = [[5, 6], [8, 9, 10], [2, 3, 4]]
>>> matrix_mul(mat_a, mat_b)
Traceback (most recent call last):
    ...Traceback...
ValueError: m_a and m_b can't be multiplied
